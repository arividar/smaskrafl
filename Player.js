// Generated by CoffeeScript 2.7.0
(function() {
  var Player, root, scoreMove, tileValues;

  tileValues = {
    a: 1,
    'á': 4,
    b: 4,
    d: 3,
    'ð': 2,
    e: 2,
    'é': 9,
    f: 3,
    g: 2,
    h: 3,
    i: 1,
    'í': 7,
    j: 4,
    k: 2,
    l: 1,
    m: 2,
    n: 1,
    o: 5,
    'ó': 4,
    p: 5,
    r: 1,
    s: 1,
    t: 1,
    u: 1,
    'ú': 7,
    v: 3,
    x: 10,
    y: 6,
    'ý': 8,
    'þ': 8,
    'æ': 6,
    'ö': 6
  };

  scoreMove = function(dictionary, swapCoordinates) {
    var i, j, len, len1, letter, moveScore, multiplier, newWords, word, words, x1, x2, y1, y2;
    ({x1, y1, x2, y2} = swapCoordinates);
    words = dictionary.wordsThroughTile(x1, y1).concat(dictionary.wordsThroughTile(x2, y2));
    moveScore = multiplier = 0;
    newWords = [];
    for (i = 0, len = words.length; i < len; i++) {
      word = words[i];
      if (!(dictionary.isWord(word) && dictionary.markUsed(word))) {
        continue;
      }
      multiplier++;
      for (j = 0, len1 = word.length; j < len1; j++) {
        letter = word[j];
        moveScore += tileValues[letter];
      }
      newWords.push(word);
    }
    moveScore *= multiplier;
    return {moveScore, newWords};
  };

  Player = class Player {
    constructor(id, name) {
      this.id = id;
      this.name = name;
    }

    setDictionary(dictionary1) {
      this.dictionary = dictionary1;
      this.score = 0;
      return this.moveCount = 0;
    }

    makeMove(swapCoordinates) {
      var result;
      this.dictionary.grid.swap(swapCoordinates);
      this.moveCount++;
      result = scoreMove(this.dictionary, swapCoordinates);
      this.score += result.moveScore;
      return result;
    }

    toJSON() {
      return {id: this.id, name: this.name, score: this.score, moveCount: this.moveCount};
    }

  };

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.Player = Player;

}).call(this);
